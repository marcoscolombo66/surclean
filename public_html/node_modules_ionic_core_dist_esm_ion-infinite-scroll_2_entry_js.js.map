{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/index-c4b11676.js","./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Logs a warning to the console with an Ionic prefix\n * to indicate the library that is warning the developer.\n *\n * @param message - The string message to be logged to the console.\n */\nconst printIonWarning = (message, ...params) => {\n  return console.warn(`[Ionic Warning]: ${message}`, ...params);\n};\n/*\n * Logs an error to the console with an Ionic prefix\n * to indicate the library that is warning the developer.\n *\n * @param message - The string message to be logged to the console.\n * @param params - Additional arguments to supply to the console.error.\n */\nconst printIonError = (message, ...params) => {\n  return console.error(`[Ionic Error]: ${message}`, ...params);\n};\n/**\n * Prints an error informing developers that an implementation requires an element to be used\n * within a specific selector.\n *\n * @param el The web component element this is requiring the element.\n * @param targetSelectors The selector or selectors that were not found.\n */\nconst printRequiredElementError = (el, ...targetSelectors) => {\n  return console.error(`<${el.tagName.toLowerCase()}> must be used inside ${targetSelectors.join(' or ')}.`);\n};\n\nexport { printRequiredElementError as a, printIonError as b, printIonWarning as p };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, c as writeTask, f as readTask, h, i as getElement, H as Host } from './index-8e692445.js';\nimport { b as getIonMode, c as config } from './ionic-global-c74e4951.js';\nimport { f as findClosestIonContent, p as printIonContentErrorMsg, g as getScrollElement } from './index-e6d1a8be.js';\nimport { E as ENABLE_HTML_CONTENT_DEFAULT, a as sanitizeDOMString } from './config-d4f612d2.js';\nimport './helpers-3b390e48.js';\nimport './index-c4b11676.js';\n\nconst infiniteScrollCss = \"ion-infinite-scroll{display:none;width:100%}.infinite-scroll-enabled{display:block}\";\n\nconst InfiniteScroll = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionInfinite = createEvent(this, \"ionInfinite\", 7);\n    this.thrPx = 0;\n    this.thrPc = 0;\n    this.didFire = false;\n    this.isBusy = false;\n    this.isLoading = false;\n    /**\n     * The threshold distance from the bottom\n     * of the content to call the `infinite` output event when scrolled.\n     * The threshold value can be either a percent, or\n     * in pixels. For example, use the value of `10%` for the `infinite`\n     * output event to get called when the user has scrolled 10%\n     * from the bottom of the page. Use the value `100px` when the\n     * scroll is within 100 pixels from the bottom of the page.\n     */\n    this.threshold = '15%';\n    /**\n     * If `true`, the infinite scroll will be hidden and scroll event listeners\n     * will be removed.\n     *\n     * Set this to true to disable the infinite scroll from actively\n     * trying to receive new data while scrolling. This is useful\n     * when it is known that there is no more data that can be added, and\n     * the infinite scroll is no longer needed.\n     */\n    this.disabled = false;\n    /**\n     * The position of the infinite scroll element.\n     * The value can be either `top` or `bottom`.\n     */\n    this.position = 'bottom';\n    this.onScroll = () => {\n      const scrollEl = this.scrollEl;\n      if (!scrollEl || !this.canStart()) {\n        return 1;\n      }\n      const infiniteHeight = this.el.offsetHeight;\n      if (infiniteHeight === 0) {\n        // if there is no height of this element then do nothing\n        return 2;\n      }\n      const scrollTop = scrollEl.scrollTop;\n      const scrollHeight = scrollEl.scrollHeight;\n      const height = scrollEl.offsetHeight;\n      const threshold = this.thrPc !== 0 ? height * this.thrPc : this.thrPx;\n      const distanceFromInfinite = this.position === 'bottom'\n        ? scrollHeight - infiniteHeight - scrollTop - threshold - height\n        : scrollTop - infiniteHeight - threshold;\n      if (distanceFromInfinite < 0) {\n        if (!this.didFire) {\n          this.isLoading = true;\n          this.didFire = true;\n          this.ionInfinite.emit();\n          return 3;\n        }\n      }\n      else {\n        this.didFire = false;\n      }\n      return 4;\n    };\n  }\n  thresholdChanged() {\n    const val = this.threshold;\n    if (val.lastIndexOf('%') > -1) {\n      this.thrPx = 0;\n      this.thrPc = parseFloat(val) / 100;\n    }\n    else {\n      this.thrPx = parseFloat(val);\n      this.thrPc = 0;\n    }\n  }\n  disabledChanged() {\n    const disabled = this.disabled;\n    if (disabled) {\n      this.isLoading = false;\n      this.isBusy = false;\n    }\n    this.enableScrollEvents(!disabled);\n  }\n  async connectedCallback() {\n    const contentEl = findClosestIonContent(this.el);\n    if (!contentEl) {\n      printIonContentErrorMsg(this.el);\n      return;\n    }\n    this.scrollEl = await getScrollElement(contentEl);\n    this.thresholdChanged();\n    this.disabledChanged();\n    if (this.position === 'top') {\n      writeTask(() => {\n        if (this.scrollEl) {\n          this.scrollEl.scrollTop = this.scrollEl.scrollHeight - this.scrollEl.clientHeight;\n        }\n      });\n    }\n  }\n  disconnectedCallback() {\n    this.enableScrollEvents(false);\n    this.scrollEl = undefined;\n  }\n  /**\n   * Call `complete()` within the `ionInfinite` output event handler when\n   * your async operation has completed. For example, the `loading`\n   * state is while the app is performing an asynchronous operation,\n   * such as receiving more data from an AJAX request to add more items\n   * to a data list. Once the data has been received and UI updated, you\n   * then call this method to signify that the loading has completed.\n   * This method will change the infinite scroll's state from `loading`\n   * to `enabled`.\n   */\n  async complete() {\n    const scrollEl = this.scrollEl;\n    if (!this.isLoading || !scrollEl) {\n      return;\n    }\n    this.isLoading = false;\n    if (this.position === 'top') {\n      /**\n       * New content is being added at the top, but the scrollTop position stays the same,\n       * which causes a scroll jump visually. This algorithm makes sure to prevent this.\n       * (Frame 1)\n       *    - complete() is called, but the UI hasn't had time to update yet.\n       *    - Save the current content dimensions.\n       *    - Wait for the next frame using _dom.read, so the UI will be updated.\n       * (Frame 2)\n       *    - Read the new content dimensions.\n       *    - Calculate the height difference and the new scroll position.\n       *    - Delay the scroll position change until other possible dom reads are done using _dom.write to be performant.\n       * (Still frame 2, if I'm correct)\n       *    - Change the scroll position (= visually maintain the scroll position).\n       *    - Change the state to re-enable the InfiniteScroll.\n       *    - This should be after changing the scroll position, or it could\n       *    cause the InfiniteScroll to be triggered again immediately.\n       * (Frame 3)\n       *    Done.\n       */\n      this.isBusy = true;\n      // ******** DOM READ ****************\n      // Save the current content dimensions before the UI updates\n      const prev = scrollEl.scrollHeight - scrollEl.scrollTop;\n      // ******** DOM READ ****************\n      requestAnimationFrame(() => {\n        readTask(() => {\n          // UI has updated, save the new content dimensions\n          const scrollHeight = scrollEl.scrollHeight;\n          // New content was added on top, so the scroll position should be changed immediately to prevent it from jumping around\n          const newScrollTop = scrollHeight - prev;\n          // ******** DOM WRITE ****************\n          requestAnimationFrame(() => {\n            writeTask(() => {\n              scrollEl.scrollTop = newScrollTop;\n              this.isBusy = false;\n            });\n          });\n        });\n      });\n    }\n  }\n  canStart() {\n    return !this.disabled && !this.isBusy && !!this.scrollEl && !this.isLoading;\n  }\n  enableScrollEvents(shouldListen) {\n    if (this.scrollEl) {\n      if (shouldListen) {\n        this.scrollEl.addEventListener('scroll', this.onScroll);\n      }\n      else {\n        this.scrollEl.removeEventListener('scroll', this.onScroll);\n      }\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    const disabled = this.disabled;\n    return (h(Host, { class: {\n        [mode]: true,\n        'infinite-scroll-loading': this.isLoading,\n        'infinite-scroll-enabled': !disabled,\n      } }));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"threshold\": [\"thresholdChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nInfiniteScroll.style = infiniteScrollCss;\n\nconst infiniteScrollContentIosCss = \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{margin-left:32px;margin-right:32px;margin-top:4px;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.infinite-loading-text{margin-left:unset;margin-right:unset;-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px}}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-ios .infinite-loading-text{color:var(--ion-color-step-600, #666666)}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-small-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-crescent circle{stroke:var(--ion-color-step-600, #666666)}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600, #666666)}\";\n\nconst infiniteScrollContentMdCss = \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{margin-left:32px;margin-right:32px;margin-top:4px;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.infinite-loading-text{margin-left:unset;margin-right:unset;-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px}}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-md .infinite-loading-text{color:var(--ion-color-step-600, #666666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-small-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-crescent circle{stroke:var(--ion-color-step-600, #666666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600, #666666)}\";\n\nconst InfiniteScrollContent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.customHTMLEnabled = config.get('innerHTMLTemplatesEnabled', ENABLE_HTML_CONTENT_DEFAULT);\n  }\n  componentDidLoad() {\n    if (this.loadingSpinner === undefined) {\n      const mode = getIonMode(this);\n      this.loadingSpinner = config.get('infiniteLoadingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'crescent'));\n    }\n  }\n  renderLoadingText() {\n    const { customHTMLEnabled, loadingText } = this;\n    if (customHTMLEnabled) {\n      return h(\"div\", { class: \"infinite-loading-text\", innerHTML: sanitizeDOMString(loadingText) });\n    }\n    return h(\"div\", { class: \"infinite-loading-text\" }, this.loadingText);\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        // Used internally for styling\n        [`infinite-scroll-content-${mode}`]: true,\n      } }, h(\"div\", { class: \"infinite-loading\" }, this.loadingSpinner && (h(\"div\", { class: \"infinite-loading-spinner\" }, h(\"ion-spinner\", { name: this.loadingSpinner }))), this.loadingText !== undefined && this.renderLoadingText())));\n  }\n};\nInfiniteScrollContent.style = {\n  ios: infiniteScrollContentIosCss,\n  md: infiniteScrollContentMdCss\n};\n\nexport { InfiniteScroll as ion_infinite_scroll, InfiniteScrollContent as ion_infinite_scroll_content };\n"],"names":["r","registerInstance","e","createEvent","c","writeTask","f","readTask","h","i","getElement","H","Host","b","getIonMode","config","findClosestIonContent","p","printIonContentErrorMsg","g","getScrollElement","E","ENABLE_HTML_CONTENT_DEFAULT","a","sanitizeDOMString","infiniteScrollCss","InfiniteScroll","constructor","hostRef","ionInfinite","thrPx","thrPc","didFire","isBusy","isLoading","threshold","disabled","position","onScroll","scrollEl","canStart","infiniteHeight","el","offsetHeight","scrollTop","scrollHeight","height","distanceFromInfinite","emit","thresholdChanged","val","lastIndexOf","parseFloat","disabledChanged","enableScrollEvents","connectedCallback","_this","_asyncToGenerator","contentEl","clientHeight","disconnectedCallback","undefined","complete","_this2","prev","requestAnimationFrame","newScrollTop","shouldListen","addEventListener","removeEventListener","render","mode","class","watchers","style","infiniteScrollContentIosCss","infiniteScrollContentMdCss","InfiniteScrollContent","customHTMLEnabled","get","componentDidLoad","loadingSpinner","renderLoadingText","loadingText","innerHTML","name","ios","md","ion_infinite_scroll","ion_infinite_scroll_content"],"sourceRoot":"webpack:///"}